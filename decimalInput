const changeInputValue = (e) => {
    const [innerValue, setInnerValue] = useState('');
    const isDecimalType = (e.target.value?.split('')?.every(item => decimalStringNumbers.includes(String(item))))

    if (type === 'number' && !isDecimalType) {
      return false;
    } else if (type === 'number' && isDecimalType) {
      const commaCounts = e.target.value?.split?.(',')?.length;
      const dotCounts = e.target.value?.split?.('.')?.length;

      if (commaCounts > 2 || e.target.value?.[0] === ',') {
        return false;
      }
      if (dotCounts > 2 || e.target.value?.[0] === '.') {
        return false;
      }
      if (dotCounts === 2 && commaCounts === 2) {
        return false;
      }
    }

    const newInnerValue = type === 'number' && typeof e.target.value === 'string' ? e.target.value.replace('.', ',') : e.target.value;

    debounceChangeValue(e, type === 'number' && typeof e.target.value === 'string' ? e.target.value.replace(',', '.') : e.target.value);
    setInnerValue(newInnerValue);
  };

  useEffect(() => {
    if (type === 'number') {
      if (typeof value === 'string' && value.replace('.', ',') !== innerValue) {
        setInnerValue(value.replace('.', ','))
      }
    } else if (value !== innerValue) setInnerValue(value);
  }, [value]);
